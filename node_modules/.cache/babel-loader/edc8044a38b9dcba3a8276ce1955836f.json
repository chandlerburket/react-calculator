{"ast":null,"code":"var _jsxFileName = \"/home/costanza/Projects/copy-calc/react-calculator/src/components/About.js\";\nimport React from 'react';\n\nconst About = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }\n  }, \"About\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  }, \"\\uD83D\\uDD28 Built Using: \\uD83D\\uDD28\"), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      textAlign: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"li-space\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 25\n    }\n  }, \"React\"), \" with \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 53\n    }\n  }, \"Hooks\"), \" for \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 80\n    }\n  }, \"state management\"), \" and \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 118\n    }\n  }, \"dynamic user interface.\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"li-space\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }\n  }, \"React Router\"), \" for painless \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 68\n    }\n  }, \"client-side routing\"), \".\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"li-space\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }\n  }, \"Math.js\"), \" to \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 53\n    }\n  }, \"evaluate expressions\"), \" instead of the \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 106\n    }\n  }, \"dangerous\"), \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 158\n    }\n  }, \"eval()\"), \" in JavaScript.\")), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"\\uD83D\\uDCBB Code Summary: \\uD83D\\uDCBB\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: 'left',\n      marginLeft: '50px',\n      marginRight: '50px',\n      lineHeight: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, \"On each click event \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 41\n    }\n  }, \"handleClick(e)\"), \" will pass the value of the button clicked to \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 114\n    }\n  }, \"handleNewKey(newKeyValue)\"), \" to handle the value. There is a function to handle digits (0-9) \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 64\n    }\n  }, \"handleDigit(newKeyValue)\"), \", operators (+, -, *, /, and =) \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 133\n    }\n  }, \"handleOperator(newKeyValue)\"), \", and the other buttons on the calculator. If the string is a valid expression then \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 62\n    }\n  }, \"Display.js\"), \" will format accordingly.\")));\n};\n\nexport default About;","map":{"version":3,"sources":["/home/costanza/Projects/copy-calc/react-calculator/src/components/About.js"],"names":["React","About","textAlign","color","marginLeft","marginRight","lineHeight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAChB,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADJ,eAEI;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,yBACgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADhC,wBAC2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAD3D,wBACiG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADjG,CADJ,eAII;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,iCAC+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAD/C,MAJJ,eAOI;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,uBACgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADhC,mCACqF;AAAQ,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADrF,oBACyI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADzI,oBAPJ,CAFJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAbJ,eAcI;AAAG,IAAA,KAAK,EAAE;AAAED,MAAAA,SAAS,EAAE,MAAb;AAAqBE,MAAAA,UAAU,EAAE,MAAjC;AAAyCC,MAAAA,WAAW,EAAE,MAAtD;AAA8DC,MAAAA,UAAU,EAAE;AAA1E,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADxB,iEACiG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADjG,oFAE+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAF/C,mDAEoH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFpH,uGAG6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAH7C,8BAdJ,CAJJ,CADJ;AA2BH,CA5BD;;AA8BA,eAAeL,KAAf","sourcesContent":["import React from 'react';\n\nconst About = () => {\n    return (\n        <div>\n            <h1>\n                About\n            </h1>\n            <div>\n                <h3>ðŸ”¨ Built Using: ðŸ”¨</h3>\n                <ul style={{ textAlign: 'left', }}>\n                    <li className=\"li-space\">\n                        <strong>React</strong> with <strong>Hooks</strong> for <strong>state management</strong> and <strong>dynamic user interface.</strong>\n                    </li>\n                    <li className=\"li-space\">\n                        <strong>React Router</strong> for painless <strong>client-side routing</strong>.\n                    </li>\n                    <li className=\"li-space\">\n                        <strong>Math.js</strong> to <strong>evaluate expressions</strong> instead of the <strong style={{ color: 'red' }}>dangerous</strong> <code>eval()</code> in JavaScript.\n                    </li>\n                </ul>\n                <h3>ðŸ’» Code Summary: ðŸ’»</h3>\n                <p style={{ textAlign: 'left', marginLeft: '50px', marginRight: '50px', lineHeight: '20px' }}>\n                    On each click event <code>handleClick(e)</code> will pass the value of the button clicked to <code>handleNewKey(newKeyValue)</code> to handle the value.\n                    There is a function to handle digits (0-9) <code>handleDigit(newKeyValue)</code>, operators (+, -, *, /, and =) <code>handleOperator(newKeyValue)</code>, and the other buttons on the calculator. \n                    If the string is a valid expression then <code>Display.js</code> will format accordingly.\n                </p>\n            </div>\n        </div>\n    )\n};\n\nexport default About;"]},"metadata":{},"sourceType":"module"}