{"ast":null,"code":"var _jsxFileName = \"/home/chandler/Projects/javascript/react/react-calculator/src/components/Calculator.js\";\nimport React, { useState } from 'react';\nimport { evaluate } from 'mathjs';\nimport Display from './Display';\n\nconst Calculator = () => {\n  const [displayValue, setDisplayValue] = useState('0');\n  const [operator, setOperator] = useState(null);\n  const [waitingForOperand, setWaitingForOperand] = useState(false);\n  const [firstOperand, setFirstOperand] = useState('0');\n  const [clearAll, setClearAll] = useState(true);\n  const maxPrecision = 16;\n\n  const handleDigit = newKeyValue => {\n    if (waitingForOperand) {\n      setDisplayValue(`${newKeyValue}`);\n      setWaitingForOperand(false);\n      setClearAll(false);\n      console.log(displayValue, waitingForOperand, clearAll);\n    } else {\n      const newDisplayValue = displayValue === '0' ? `${newKeyValue}` : `${displayValue}${newKeyValue}`; //no leading zero\n\n      setDisplayValue(`${newDisplayValue}`);\n      setWaitingForOperand(false);\n      setClearAll(false);\n    }\n  };\n\n  const handleOperator = newKeyValue => {\n    if (firstOperand === '0' || operator == null || waitingForOperand) {\n      setDisplayValue(`${displayValue}${newKeyValue}`);\n      setWaitingForOperand(true);\n      setFirstOperand(displayValue);\n      setOperator(newKeyValue);\n      setClearAll(false);\n      return;\n    }\n\n    ;\n    const stringToEvaluate = `${firstOperand}${operator}${displayValue}`;\n    const res = stringToEvaluate.includes('=');\n\n    if (res === true) {\n      setDisplayValue('0');\n      setFirstOperand('0');\n      setOperator(null);\n      setWaitingForOperand(false);\n      setClearAll(true);\n      return;\n    }\n\n    ;\n    console.log(stringToEvaluate);\n    const newDisplayValue = `${evaluate(stringToEvaluate)}`;\n\n    if (newDisplayValue === \"NaN\") {\n      setDisplayValue('Error');\n    }\n\n    ;\n    const newOperator = newKeyValue === \"=\" ? null : newKeyValue;\n    setDisplayValue(`${newDisplayValue}`);\n    setWaitingForOperand(true);\n    setFirstOperand(`${newDisplayValue}`);\n    setOperator(newOperator);\n    setClearAll(false);\n  };\n\n  const handlePoint = newKeyValue => {\n    const needPoint = `${displayValue}`.indexOf('.') === -1 ? true : false;\n\n    if (waitingForOperand) {\n      setDisplayValue('0');\n      setWaitingForOperand(false);\n      setClearAll(false);\n      return;\n    }\n\n    ;\n\n    if (needPoint) {\n      setDisplayValue(`${displayValue}${newKeyValue}`);\n      setWaitingForOperand(false);\n      setClearAll(false);\n    }\n\n    ;\n  }; // TODO: Fix Percentage.\n\n\n  const handlePercentage = () => {\n    const newDisplayValue = parseFloat(displayValue).toPrecision(maxPrecision) / 100;\n    setDisplayValue(`${newDisplayValue}`);\n    setWaitingForOperand(false);\n    setClearAll(false);\n  };\n\n  const handlePlusMinusToggle = () => {\n    const newDisplayValue = parseFloat(displayValue).toPrecision(maxPrecision) * -1;\n    setDisplayValue(`${newDisplayValue}`);\n    setWaitingForOperand(false);\n    setClearAll(false);\n  };\n\n  const handleClear = () => {\n    console.log('clearAll', clearAll);\n\n    if (clearAll) {\n      setDisplayValue('0');\n      setFirstOperand('0');\n      setOperator(null);\n      setWaitingForOperand(false);\n      setClearAll(true);\n    } else {\n      setDisplayValue('0');\n      setClearAll(true);\n    }\n  };\n\n  const handleKeyPress = newKeyValue => {\n    /* Don't do anything, just write to the console. */\n    console.log('Input Value: ', newKeyValue);\n  };\n\n  const handleFunctionKey = newKeyValue => {\n    switch (newKeyValue) {\n      case \"C\":\n        handleClear();\n        break;\n\n      case \"Â±\":\n        handlePlusMinusToggle();\n        break;\n\n      case \".\":\n        handlePoint(newKeyValue);\n        break;\n\n      case \"%\":\n        handlePercentage();\n        break;\n\n      default:\n        handleKeyPress(newKeyValue);\n    }\n  };\n\n  const handleClick = e => {\n    handleNewKey(`${e.target.value}`);\n  };\n\n  const handleNewKey = newKeyValue => {\n    const digits = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n    const operators = ['/', '*', '-', '+', '='];\n    const isDigit = digits.includes(newKeyValue);\n    const isOperator = operators.includes(newKeyValue);\n\n    if (isDigit) {\n      handleDigit(newKeyValue);\n    }\n\n    if (isOperator) {\n      handleOperator(newKeyValue);\n    } else {\n      handleFunctionKey(newKeyValue);\n    }\n  };\n\n  console.log(displayValue);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calculator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Display, {\n    value: displayValue,\n    maxPrecision: maxPrecision,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calculator-keypad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-keys\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"function-keys\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"key-clear\",\n    value: \"C\",\n    className: \"calculator-key key-clear\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }, clearAll ? 'AC' : 'C'), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"key-sign\",\n    value: \"\\xB1\",\n    className: \"calculator-key key-sign\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }, \"\\xB1\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"key-percent\",\n    value: \"%\",\n    className: \"calculator-key key-percent\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, \"%\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"digit-keys\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"key-0\",\n    value: \"0\",\n    className: \"calculator-key key-0\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  }, \"0\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"key-dot\",\n    value: \".\",\n    className: \"calculator-key key-dot\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, \"\\xB7\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"key-1\",\n    value: \"1\",\n    className: \"calculator-key key-1\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, \"1\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"key-2\",\n    value: \"2\",\n    className: \"calculator-key key-2\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, \"2\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"key-3\",\n    value: \"3\",\n    className: \"calculator-key key-3\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }, \"3\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"key-4\",\n    value: \"4\",\n    className: \"calculator-key key-4\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 25\n    }\n  }, \"4\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"key-5\",\n    value: \"5\",\n    className: \"calculator-key key-5\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }, \"5\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"key-6\",\n    value: \"6\",\n    className: \"calculator-key key-6\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }, \"6\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"key-7\",\n    value: \"7\",\n    className: \"calculator-key key-7\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }, \"7\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"key-8\",\n    value: \"8\",\n    className: \"calculator-key key-8\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, \"8\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"key-9\",\n    value: \"9\",\n    className: \"calculator-key key-9\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }, \"9\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"operator-keys\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"key-divide\",\n    value: \"/\",\n    className: \"calculator-key calc-key key-divide\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, \"\\xF7\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"key-multiply\",\n    value: \"*\",\n    className: \"calculator-key calc-key key-multiply\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"key-subtract\",\n    value: \"-\",\n    className: \"calculator-key calc-key key-subtract\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }, \"\\u2013\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"key-add\",\n    value: \"+\",\n    className: \"calculator-key calc-key key-add\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, \"+\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"key-equals\",\n    value: \"=\",\n    className: \"calculator-key calc-key key-equals\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, \"=\"))));\n};\n\nexport default Calculator;","map":{"version":3,"sources":["/home/chandler/Projects/javascript/react/react-calculator/src/components/Calculator.js"],"names":["React","useState","evaluate","Display","Calculator","displayValue","setDisplayValue","operator","setOperator","waitingForOperand","setWaitingForOperand","firstOperand","setFirstOperand","clearAll","setClearAll","maxPrecision","handleDigit","newKeyValue","console","log","newDisplayValue","handleOperator","stringToEvaluate","res","includes","newOperator","handlePoint","needPoint","indexOf","handlePercentage","parseFloat","toPrecision","handlePlusMinusToggle","handleClear","handleKeyPress","handleFunctionKey","handleClick","e","handleNewKey","target","value","digits","operators","isDigit","isOperator"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { evaluate } from 'mathjs';\nimport Display from './Display';\n\nconst Calculator = () => {\n    const [displayValue, setDisplayValue] = useState('0');\n    const [operator, setOperator] = useState(null);\n    const [waitingForOperand, setWaitingForOperand] = useState(false);\n    const [firstOperand, setFirstOperand] = useState('0');\n    const [clearAll, setClearAll] = useState(true);\n    const maxPrecision = 16;\n\n    const handleDigit = (newKeyValue) => {\n        if (waitingForOperand) {\n            setDisplayValue(`${newKeyValue}`);\n            setWaitingForOperand(false);\n            setClearAll(false);\n            console.log(displayValue, waitingForOperand, clearAll)\n        } else {\n            const newDisplayValue = (displayValue === '0') ? `${newKeyValue}` : `${(displayValue)}${newKeyValue}`; //no leading zero\n            setDisplayValue(`${newDisplayValue}`);\n            setWaitingForOperand(false);\n            setClearAll(false);\n        }\n    }\n\n    const handleOperator = (newKeyValue) => {\n        if (firstOperand === '0' || operator == null || waitingForOperand) {\n            setDisplayValue(`${displayValue}${newKeyValue}`)\n            setWaitingForOperand(true);\n            setFirstOperand(displayValue);\n            setOperator(newKeyValue);\n            setClearAll(false);\n            return;\n        };\n\n        const stringToEvaluate = `${firstOperand}${operator}${displayValue}`;\n        const res = stringToEvaluate.includes('=');\n\n        if (res === true) {\n            setDisplayValue('0');\n            setFirstOperand('0');\n            setOperator(null);\n            setWaitingForOperand(false);\n            setClearAll(true);\n            return;\n        };\n\n        console.log(stringToEvaluate)\n\n        const newDisplayValue = `${evaluate(stringToEvaluate)}`;\n\n        if (newDisplayValue === \"NaN\") {\n            setDisplayValue('Error');\n        };\n\n        const newOperator = (newKeyValue === \"=\") ? null : newKeyValue;\n        setDisplayValue(`${newDisplayValue}`);\n        setWaitingForOperand(true);\n        setFirstOperand(`${newDisplayValue}`);\n        setOperator(newOperator);\n        setClearAll(false);\n    };\n\n    const handlePoint = (newKeyValue) => {\n        const needPoint = `${displayValue}`.indexOf('.') === -1 ? true : false;\n\n        if (waitingForOperand) {\n            setDisplayValue('0');\n            setWaitingForOperand(false);\n            setClearAll(false);\n            return;\n        };\n\n        if (needPoint) {\n            setDisplayValue(`${displayValue}${newKeyValue}`);\n            setWaitingForOperand(false);\n            setClearAll(false);\n        };\n    }\n\n    // TODO: Fix Percentage.\n    const handlePercentage = () => {\n        const newDisplayValue = parseFloat(displayValue).toPrecision(maxPrecision) / 100;\n\n        setDisplayValue(`${newDisplayValue}`);\n        setWaitingForOperand(false);\n        setClearAll(false);\n    }\n\n    const handlePlusMinusToggle = () => {\n        const newDisplayValue = parseFloat(displayValue).toPrecision(maxPrecision) * -1\n\n        setDisplayValue(`${newDisplayValue}`);\n        setWaitingForOperand(false);\n        setClearAll(false);\n    }\n\n    const handleClear = () => {\n        console.log('clearAll', clearAll);\n        if (clearAll) {\n            setDisplayValue('0');\n            setFirstOperand('0');\n            setOperator(null);\n            setWaitingForOperand(false);\n            setClearAll(true);\n        } else {\n            setDisplayValue('0');\n            setClearAll(true);\n        }\n    }\n\n\n    const handleKeyPress = (newKeyValue) => {\n        /* Don't do anything, just write to the console. */\n        console.log('Input Value: ', newKeyValue);\n    }\n\n    const handleFunctionKey = (newKeyValue) => {\n        switch (newKeyValue) {\n            case \"C\":\n                handleClear();\n                break;\n            case \"Â±\":\n                handlePlusMinusToggle();\n                break;\n            case \".\":\n                handlePoint(newKeyValue);\n                break;\n            case \"%\":\n                handlePercentage();\n                break;\n            default:\n                handleKeyPress(newKeyValue);\n        }\n    }\n\n\n    const handleClick = (e) => {\n        handleNewKey(`${e.target.value}`);\n    }\n\n    const handleNewKey = (newKeyValue) => {\n        const digits = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n        const operators = ['/', '*', '-', '+', '='];\n\n        const isDigit = digits.includes(newKeyValue);\n        const isOperator = operators.includes(newKeyValue);\n\n        if (isDigit) {\n            handleDigit(newKeyValue);\n        }\n        if (isOperator) {\n            handleOperator(newKeyValue);\n        } else {\n            handleFunctionKey(newKeyValue);\n        }\n    }\n\n    console.log(displayValue)\n\n    return (\n        <div className=\"calculator\">\n            <Display value={displayValue} maxPrecision={maxPrecision} />\n\n            <div className=\"calculator-keypad\">\n                <div className=\"input-keys\">\n                    <div className=\"function-keys\">\n                        <button id=\"key-clear\" value=\"C\" className=\"calculator-key key-clear\" onClick={handleClick}>{clearAll ? 'AC' : 'C'}</button>\n                        <button id=\"key-sign\" value=\"Â±\" className=\"calculator-key key-sign\" onClick={handleClick}>&plusmn;</button>\n                        <button id=\"key-percent\" value=\"%\" className=\"calculator-key key-percent\" onClick={handleClick}>%</button>\n                    </div>\n\n                    <div className=\"digit-keys\">\n                        <button id=\"key-0\" value=\"0\" className=\"calculator-key key-0\" onClick={handleClick}>0</button>\n                        <button id=\"key-dot\" value=\".\" className=\"calculator-key key-dot\" onClick={handleClick}>&middot;</button>\n                        <button id=\"key-1\" value=\"1\" className=\"calculator-key key-1\" onClick={handleClick}>1</button>\n                        <button id=\"key-2\" value=\"2\" className=\"calculator-key key-2\" onClick={handleClick}>2</button>\n                        <button id=\"key-3\" value=\"3\" className=\"calculator-key key-3\" onClick={handleClick}>3</button>\n                        <button id=\"key-4\" value=\"4\" className=\"calculator-key key-4\" onClick={handleClick}>4</button>\n                        <button id=\"key-5\" value=\"5\" className=\"calculator-key key-5\" onClick={handleClick}>5</button>\n                        <button id=\"key-6\" value=\"6\" className=\"calculator-key key-6\" onClick={handleClick}>6</button>\n                        <button id=\"key-7\" value=\"7\" className=\"calculator-key key-7\" onClick={handleClick}>7</button>\n                        <button id=\"key-8\" value=\"8\" className=\"calculator-key key-8\" onClick={handleClick}>8</button>\n                        <button id=\"key-9\" value=\"9\" className=\"calculator-key key-9\" onClick={handleClick}>9</button>\n                    </div>\n                </div>\n\n                <div className=\"operator-keys\">\n                    <button id=\"key-divide\" value=\"/\" className=\"calculator-key calc-key key-divide\" onClick={handleClick}>&divide;</button>\n                    <button id=\"key-multiply\" value=\"*\" className=\"calculator-key calc-key key-multiply\" onClick={handleClick}>&times;</button>\n                    <button id=\"key-subtract\" value=\"-\" className=\"calculator-key calc-key key-subtract\" onClick={handleClick}>&ndash;</button>\n                    <button id=\"key-add\" value=\"+\" className=\"calculator-key calc-key key-add\" onClick={handleClick}>+</button>\n                    <button id=\"key-equals\" value=\"=\" className=\"calculator-key calc-key key-equals\" onClick={handleClick}>=</button>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Calculator;"]},"metadata":{},"sourceType":"module"}